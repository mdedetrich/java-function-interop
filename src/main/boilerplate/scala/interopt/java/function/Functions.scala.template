/*
 * Copyright (C) 2015-2022 Lightbend Inc. <https://www.lightbend.com>
 */

package scala.interopt.java.function

[3..22#/**
 * A Function interface. Used to create first-class-functions is Java. `Serializable` is needed to be able to grab line
 * number for Java 8 lambdas. Supports throwing `Exception` in the apply, which the `java.util.function.Function`
 * counterpart does not.
 */
@SerialVersionUID(##1L)
@FunctionalInterface
trait Function1[[#-T1#], +R] extends java.io.Serializable {
  @throws(classOf[Exception])
  def apply([#arg1: T1#]): R
}#

]

[2..#/**
 * A Consumer interface. Used to create 1-arg consumers in Java.
 * A Procedure is like a Function, but it doesn't produce a return value.
 * `Serializable` is needed to be able to grab line number for Java 8 lambdas.
 */
@SerialVersionUID(##1L)
@FunctionalInterface
trait Procedure1[[#-T1#]] extends java.io.Serializable {
  @throws(classOf[Exception])
  def apply([#arg1: T1#]): Unit
}#

]
